package minitwitter.GUI;

import javax.swing.DefaultListModel;
import javax.swing.JList;
import minitwitter.Observer.FollowingObserver;
import minitwitter.Observer.NewsFeedObserver;
import minitwitter.TwitterMessage;
import minitwitter.User;
import minitwitter.UserGroup;

/**
 * This class represents a user view class. It lets the current user to
 * follow another user and post a message.
 * @author Seungyun Lee
 */
public class UserView extends javax.swing.JFrame {
    
    private String ID;
    // The root group
    private UserGroup rootGroup;
    // Current user
    private User user;
    private DefaultListModel followingModel;
    private DefaultListModel newsFeedModel;
    private FollowingObserver followingObserver;
    private NewsFeedObserver newsFeedObserver;
  
    /**
     * This is the constructor that creates a user view.
     * @param ID, current user's ID
     * @param root, root group
     */
    public UserView(String ID,UserGroup root) {
        this.rootGroup = root;
        this.ID = ID;
        initComponents();    
        user = root.findUser(ID);
        followingModel = new DefaultListModel();
        newsFeedModel = new DefaultListModel();
        currentFollowing = new JList(followingModel);
        newsFeed = new JList(newsFeedModel);
        currentUserIDTextField.setText(user.getId());
        currentFollowingPane.setViewportView(currentFollowing);
        newsFeedPane.setViewportView(newsFeed);
        followingObserver = new FollowingObserver(followingModel, 
                currentFollowing);
        newsFeedObserver = new NewsFeedObserver(newsFeedModel, newsFeed);
        user.attach(newsFeedObserver);
        user.attach(followingObserver);
        this.setVisible(true);
        load();
    }
    
    /**
     * This method loads current user's following list and messages. 
     */
    private void load() {
        for (int i = 0; i < user.getFollowings().size(); ++i) {
            followingModel.addElement(user.getFollowings().get(i).getId());
            currentFollowing.setSelectedIndex(i);
            currentFollowing.ensureIndexIsVisible(i);
        }
        for (int i = 0; i < user.getNewsFeed().size(); ++i) {
            newsFeedModel.addElement(user.getNewsFeed().get(i).getMessage());
            newsFeed.setSelectedIndex(i);
            newsFeed.ensureIndexIsVisible(i);
        }
    }
    
    /**
     * I used NetBeans' drag and drop feature which generates codes that 
     * I cannot modify.
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        followUserButton = new javax.swing.JButton();
        currentFollowingPane = new javax.swing.JScrollPane();
        currentFollowing = new javax.swing.JList<>();
        postTweetButton = new javax.swing.JButton();
        newsFeedPane = new javax.swing.JScrollPane();
        newsFeed = new javax.swing.JList<>();
        userIDTextField = new javax.swing.JTextField();
        tweetMessageTextField = new javax.swing.JTextField();
        closeButton = new javax.swing.JButton();
        warningLabel = new javax.swing.JLabel();
        currentUserIDTextField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        followUserButton.setText("Follow User");
        followUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followUserButtonActionPerformed(evt);
            }
        });

        currentFollowingPane.setViewportView(currentFollowing);

        postTweetButton.setLabel("Post Tweet");
        postTweetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postTweetButtonActionPerformed(evt);
            }
        });

        newsFeedPane.setViewportView(newsFeed);

        userIDTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tweetMessageTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        warningLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        currentUserIDTextField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(warningLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(followUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(currentFollowingPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tweetMessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(postTweetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(newsFeedPane)
                    .addComponent(currentUserIDTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(closeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentUserIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(followUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(currentFollowingPane, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(postTweetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tweetMessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(newsFeedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeButton)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method sets closes the user view.
     */
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed
    
    /**
     * This method lets the current user to follow another user. It does
     * error checking like missing ID, following itself, following another user
     * that is already in the list, and entering an incorrect ID. Whenever an
     * error occurs, it warns the current user by setting the warningLabel
     * with a corresponding message.
     */
    private void followUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followUserButtonActionPerformed
        warningLabel.setText("");
        // Missing ID
        if (!userIDTextField.getText().trim().equals("")) {
            String followingID = userIDTextField.getText();
            // Checks if it's a correct ID 
            if (rootGroup.search(followingID)) {
                rootGroup.findUserGroup(followingID);
                UserGroup selectedGroup = UserGroup.getUserGroup();
                // Checks if it's trying to follow a Group
                if (!UserGroup.isFoundUserGroup()) {
                    // Checks if it's current user's ID
                    if (!followingID.equals(user.getId())) {
                        User followingUser = rootGroup.findUser(followingID);
                        // Checks if it's already following that user
                        if (!user.getFollowings().contains(followingUser)) {
                            user.addFollowings(followingUser);
                            followingUser.addFollower(user);
                            userIDTextField.setText("");
                        } else {
                            warningLabel.setText("Already followed that user");
                        }
                    } else {
                        warningLabel.setText("Cannot follow yourself");
                    }
                } else {
                    warningLabel.setText("Cannot follow a Group");
                }
            } else {
                warningLabel.setText("Enter a correct ID");
            }
        } else {
            warningLabel.setText("Enter ID");
        }
    }//GEN-LAST:event_followUserButtonActionPerformed
    
    /**
     * This method lets the user to post a new message.
     */
    private void postTweetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postTweetButtonActionPerformed
        warningLabel.setText("");
        // Checks if the user did not type anything
        if (!tweetMessageTextField.getText().trim().equals("")) {
            String newMessage = user.getId() + ": " + tweetMessageTextField.getText();
            TwitterMessage newTwitterMessage = new TwitterMessage(user.getId(), 
                    newMessage);
            User.setMainUser(user);
            user.addMessage(newTwitterMessage);
            TwitterMessage.increaseSize();
            tweetMessageTextField.setText("");
        } else {
            warningLabel.setText("Enter a message");
        }
    }//GEN-LAST:event_postTweetButtonActionPerformed

    // I used NetBeans' drag and drop feature which generates codes that 
    // I cannot modify.
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JList<String> currentFollowing;
    private javax.swing.JScrollPane currentFollowingPane;
    private javax.swing.JLabel currentUserIDTextField;
    private javax.swing.JButton followUserButton;
    private javax.swing.JList<String> newsFeed;
    private javax.swing.JScrollPane newsFeedPane;
    private javax.swing.JButton postTweetButton;
    private javax.swing.JTextField tweetMessageTextField;
    private javax.swing.JTextField userIDTextField;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables

}
